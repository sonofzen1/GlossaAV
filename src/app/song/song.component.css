.example-card {
    position: relative;
    /* so header can absolutely position inside */
    overflow: hidden;
    max-width: 100%;  /* make sure it never exceeds tile width */
    width: 400px;      /* take full width available in tile */
    max-height: 450px;
    margin: 20px auto; /* center horizontally */
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.06);
    transition: box-shadow 0.3s ease, transform 0.3s ease;
  }
  
.example-card:hover {
    box-shadow: 0px 8px 10px rgba(0, 0, 0, 0.15), 0px 4px 6px rgba(0, 0, 0, 0.1);
    /* Stronger shadow on hover */
    transform: translateY(-4px);
    /* Slight lift effect on hover */
}

mat-card-header{
    display: flex;
    z-index: 0;
    flex-direction: column;
    /* Stack the title and subtitle vertically */
    align-items: center;
    /* Center the content horizontally */
    justify-content: center;
    /* Center the content vertically */
    text-align: center;
    /* Ensure text is centered */
    padding: 16px;
    /* Add some spacing around the header */
}
mat-card-image {
    position: absolute !important;
    top: 0 !important;
    /* always stuck to the very top */
    left: 0 !important;
    width: 100% !important;
    height: 200px !important;
    /* fixed height */
    object-fit: cover !important;
    margin: 0 !important;
    /* remove Angular Material's default margins */
    z-index: 2 !important;
    /* keep it above the header */
    border-radius: 10px 10px 0 0 !important;
}
.img-container {
    height: auto;
    /* was 100%, causing the stretch */
    width: 100%;
    object-fit: cover;
    overflow: hidden;
}

.title-container {
    width: 80%;
    margin: 0 auto;
    display: flex;
    justify-content: center;
}

mat-card-title {
    font-size: 1.5rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 8px;
    margin-top: 5px;
    width: 100%;
    text-align: center;
    word-break: normal;
    overflow-wrap: break-word;
    white-space: normal;
    display: block;
}

mat-card-actions {
    display: flex;
    /* Use flexbox for alignment */
    justify-content: center;
    /* Center the actions horizontally */
    align-items: center;
    /* Center the actions vertically (optional) */
    padding: 16px 0;
    /* Add some spacing around the actions */
}

.close-button {
    position: absolute;
    right: 4px;
    top: 4px;
    font-size: 2.2rem;
    color: #9c9c9c; /* Lighter gray */
    padding-right: 12px;
    cursor: pointer;
}